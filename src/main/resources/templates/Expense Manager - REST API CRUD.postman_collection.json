{
	"info": {
		"_postman_id": "3f5fe3f4-b1c9-442e-bf62-cfe800ede33c",
		"name": "Expense Manager : REST API CRUD",
		"description": "# ðŸš€ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## ðŸ”– **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these [request](https://learning.postman.com/docs/sending-requests/requests/) types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n ```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a [variable](https://learning.postman.com/docs/sending-requests/variables/) called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## ðŸ’ª Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more [scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/) in \"Tests\" to verify if the API works as expected and execute workflows.\n    \n\n## ðŸ’¡Related templates\n\n[API testing basics](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9a37a28-055b-49cd-8c7e-97494a21eb54&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[API documentation](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=e9c28f47-1253-44af-a2f3-20dce4da1f18&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)  \n[Authorization methods](https://go.postman.co/redirect/workspace?type=personal&collectionTemplateId=31a9a6ed-4cdf-4ced-984c-d12c9aec1c27&sourceTemplateId=ddb19591-3097-41cf-82af-c84273e56719)",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "4110434"
	},
	"item": [
		{
			"name": "Read Expenses",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": "{{url}}/expenses",
				"description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
			},
			"response": [
				{
					"name": "Read Expenses Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": "localhost:8080/api/v1/expenses"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 09 Mar 2024 17:48:03 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Housing Bill\",\n        \"description\": \"Housing Bill\",\n        \"amount\": 15000,\n        \"category\": \"Housing\",\n        \"date\": \"2013-05-24\",\n        \"createdAt\": \"2024-03-09T17:43:46.523+00:00\",\n        \"updatedAt\": \"2024-03-09T17:43:46.523+00:00\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Electricity Bill\",\n        \"description\": \"Electricity Bill\",\n        \"amount\": 1000,\n        \"category\": \"Utility\",\n        \"date\": \"2013-05-24\",\n        \"createdAt\": \"2024-03-09T17:44:21.856+00:00\",\n        \"updatedAt\": \"2024-03-09T17:44:21.856+00:00\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Water Bill\",\n        \"description\": \"Water Bill\",\n        \"amount\": 500,\n        \"category\": \"Utility\",\n        \"date\": \"2013-05-24\",\n        \"createdAt\": \"2024-03-09T17:44:45.140+00:00\",\n        \"updatedAt\": \"2024-03-09T17:44:45.140+00:00\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Transportation Bill\",\n        \"description\": \"Transportation Bill\",\n        \"amount\": 4000,\n        \"category\": \"Transportation\",\n        \"date\": \"2017-05-24\",\n        \"createdAt\": \"2024-03-09T17:45:18.265+00:00\",\n        \"updatedAt\": \"2024-03-09T17:45:18.265+00:00\"\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Gas Bill\",\n        \"description\": \"Gas Bill\",\n        \"amount\": 4000,\n        \"category\": \"Gas\",\n        \"date\": \"2019-05-24\",\n        \"createdAt\": \"2024-03-09T17:45:38.980+00:00\",\n        \"updatedAt\": \"2024-03-09T17:45:38.980+00:00\"\n    },\n    {\n        \"id\": 6,\n        \"name\": \"Grocery Bill\",\n        \"description\": \"Grocery Bill\",\n        \"amount\": 400,\n        \"category\": \"Grocery\",\n        \"date\": \"2019-05-24\",\n        \"createdAt\": \"2024-03-09T17:46:07.874+00:00\",\n        \"updatedAt\": \"2024-03-09T17:46:07.874+00:00\"\n    },\n    {\n        \"id\": 7,\n        \"name\": \"Internet Bill\",\n        \"description\": \"Internet Bill\",\n        \"amount\": 400,\n        \"category\": \"Internet\",\n        \"date\": \"2020-05-24\",\n        \"createdAt\": \"2024-03-09T17:46:25.778+00:00\",\n        \"updatedAt\": \"2024-03-09T17:46:25.778+00:00\"\n    },\n    {\n        \"id\": 8,\n        \"name\": \"Cellphone Bill\",\n        \"description\": \"Cellphone Bill\",\n        \"amount\": 400,\n        \"category\": \"Internet\",\n        \"date\": \"2021-06-24\",\n        \"createdAt\": \"2024-03-09T17:46:39.883+00:00\",\n        \"updatedAt\": \"2024-03-09T17:46:39.884+00:00\"\n    },\n    {\n        \"id\": 9,\n        \"name\": \"Entertainment Bill\",\n        \"description\": \"Entertainment Bill\",\n        \"amount\": 400,\n        \"category\": \"Entertainment\",\n        \"date\": \"2021-07-29\",\n        \"createdAt\": \"2024-03-09T17:47:16.466+00:00\",\n        \"updatedAt\": \"2024-03-09T17:47:16.466+00:00\"\n    },\n    {\n        \"id\": 10,\n        \"name\": \"Shopping Bill\",\n        \"description\": \"Shopping Bill\",\n        \"amount\": 400,\n        \"category\": \"Entertainment\",\n        \"date\": \"2021-08-29\",\n        \"createdAt\": \"2024-03-09T17:47:57.332+00:00\",\n        \"updatedAt\": \"2024-03-09T17:47:57.332+00:00\"\n    }\n]"
				}
			]
		},
		{
			"name": "Create Expense",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful POST request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\n       \"name\": \"Shopping Bill\",\n        \"description\": \"Shopping Bill\",\n        \"amount\": 400.00,\n        \"category\": \"Entertainment\",\n        \"date\": \"2021-08-29\"\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{url}}/expenses",
				"description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
			},
			"response": [
				{
					"name": "Create Expense Example",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n       \"name\": \"Shopping Bill\",\n        \"description\": \"Shopping Bill\",\n        \"amount\": 400.00,\n        \"category\": \"Entertainment\",\n        \"date\": \"2021-08-29\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "localhost:8080/api/v1/expenses"
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 09 Mar 2024 17:47:57 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 10,\n    \"name\": \"Shopping Bill\",\n    \"description\": \"Shopping Bill\",\n    \"amount\": 400,\n    \"category\": \"Entertainment\",\n    \"date\": \"2021-08-29\",\n    \"createdAt\": \"2024-03-09T17:47:57.332+00:00\",\n    \"updatedAt\": \"2024-03-09T17:47:57.332+00:00\"\n}"
				}
			]
		},
		{
			"name": "Update Expense",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful PUT request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "    {\n\n        \"amount\": 3000.00\n\n    }",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "{{url}}/expenses/9",
				"description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
			},
			"response": [
				{
					"name": "Update Expense Example",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "    {\n\n        \"amount\": 3000.00\n\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "localhost:8080/api/v1/expenses/9"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 09 Mar 2024 17:49:38 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 9,\n    \"name\": \"Entertainment Bill\",\n    \"description\": \"Entertainment Bill\",\n    \"amount\": 3000,\n    \"category\": \"Entertainment\",\n    \"date\": \"2021-07-29\",\n    \"createdAt\": \"2024-03-09T17:47:16.466+00:00\",\n    \"updatedAt\": \"2024-03-09T17:49:38.635+00:00\"\n}"
				}
			]
		},
		{
			"name": "Delete Expense",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successful DELETE request\", function () {",
							"    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/expenses?id=11",
					"host": [
						"{{url}}"
					],
					"path": [
						"expenses"
					],
					"query": [
						{
							"key": "id",
							"value": "11"
						}
					]
				},
				"description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
			},
			"response": [
				{
					"name": "Delete Expense Example",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/api/v1/expenses?id=11",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"expenses"
							],
							"query": [
								{
									"key": "id",
									"value": "11"
								}
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": "plain",
					"header": [
						{
							"key": "Date",
							"value": "Sat, 09 Mar 2024 17:50:20 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Read Expense By Id",
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": "{{url}}/expenses/1"
			},
			"response": [
				{
					"name": "Read Expense By Id Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": "localhost:8080/api/v1/expenses/1"
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 09 Mar 2024 17:50:40 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "{\n    \"id\": 1,\n    \"name\": \"Housing Bill\",\n    \"description\": \"Housing Bill\",\n    \"amount\": 15000,\n    \"category\": \"Housing\",\n    \"date\": \"2013-05-24\",\n    \"createdAt\": \"2024-03-09T17:43:46.523+00:00\",\n    \"updatedAt\": \"2024-03-09T17:43:46.523+00:00\"\n}"
				}
			]
		},
		{
			"name": "Filter Expense By Category",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/expenses/category?category=Utility",
					"host": [
						"{{url}}"
					],
					"path": [
						"expenses",
						"category"
					],
					"query": [
						{
							"key": "category",
							"value": "Utility"
						}
					]
				}
			},
			"response": [
				{
					"name": "Filter Expense By Category Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/v1/expenses/category?category=Utility",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"expenses",
								"category"
							],
							"query": [
								{
									"key": "category",
									"value": "Utility"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 09 Mar 2024 17:51:09 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": 2,\n        \"name\": \"Electricity Bill\",\n        \"description\": \"Electricity Bill\",\n        \"amount\": 1000,\n        \"category\": \"Utility\",\n        \"date\": \"2013-05-24\",\n        \"createdAt\": \"2024-03-09T17:44:21.856+00:00\",\n        \"updatedAt\": \"2024-03-09T17:44:21.856+00:00\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Water Bill\",\n        \"description\": \"Water Bill\",\n        \"amount\": 500,\n        \"category\": \"Utility\",\n        \"date\": \"2013-05-24\",\n        \"createdAt\": \"2024-03-09T17:44:45.140+00:00\",\n        \"updatedAt\": \"2024-03-09T17:44:45.140+00:00\"\n    }\n]"
				}
			]
		},
		{
			"name": "Filter By Name",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/expenses/name?name=internet",
					"host": [
						"{{url}}"
					],
					"path": [
						"expenses",
						"name"
					],
					"query": [
						{
							"key": "name",
							"value": "internet"
						}
					]
				}
			},
			"response": [
				{
					"name": "Filter By Name Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/v1/expenses/name?name=internet",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"expenses",
								"name"
							],
							"query": [
								{
									"key": "name",
									"value": "internet"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 09 Mar 2024 17:51:31 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": 7,\n        \"name\": \"Internet Bill\",\n        \"description\": \"Internet Bill\",\n        \"amount\": 400,\n        \"category\": \"Internet\",\n        \"date\": \"2020-05-24\",\n        \"createdAt\": \"2024-03-09T17:46:25.778+00:00\",\n        \"updatedAt\": \"2024-03-09T17:46:25.778+00:00\"\n    }\n]"
				}
			]
		},
		{
			"name": "Filter By Date",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/expenses/date?startDate=2013-01-01&endDate=2020-02-15",
					"host": [
						"{{url}}"
					],
					"path": [
						"expenses",
						"date"
					],
					"query": [
						{
							"key": "startDate",
							"value": "2013-01-01"
						},
						{
							"key": "endDate",
							"value": "2020-02-15"
						}
					]
				}
			},
			"response": [
				{
					"name": "Filter By Date Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/v1/expenses/date?startDate=2013-01-01&endDate=2020-02-15",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"expenses",
								"date"
							],
							"query": [
								{
									"key": "startDate",
									"value": "2013-01-01"
								},
								{
									"key": "endDate",
									"value": "2020-02-15"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 09 Mar 2024 17:52:01 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": 1,\n        \"name\": \"Housing Bill\",\n        \"description\": \"Housing Bill\",\n        \"amount\": 15000,\n        \"category\": \"Housing\",\n        \"date\": \"2013-05-24\",\n        \"createdAt\": \"2024-03-09T17:43:46.523+00:00\",\n        \"updatedAt\": \"2024-03-09T17:43:46.523+00:00\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Electricity Bill\",\n        \"description\": \"Electricity Bill\",\n        \"amount\": 1000,\n        \"category\": \"Utility\",\n        \"date\": \"2013-05-24\",\n        \"createdAt\": \"2024-03-09T17:44:21.856+00:00\",\n        \"updatedAt\": \"2024-03-09T17:44:21.856+00:00\"\n    },\n    {\n        \"id\": 3,\n        \"name\": \"Water Bill\",\n        \"description\": \"Water Bill\",\n        \"amount\": 500,\n        \"category\": \"Utility\",\n        \"date\": \"2013-05-24\",\n        \"createdAt\": \"2024-03-09T17:44:45.140+00:00\",\n        \"updatedAt\": \"2024-03-09T17:44:45.140+00:00\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Transportation Bill\",\n        \"description\": \"Transportation Bill\",\n        \"amount\": 4000,\n        \"category\": \"Transportation\",\n        \"date\": \"2017-05-24\",\n        \"createdAt\": \"2024-03-09T17:45:18.265+00:00\",\n        \"updatedAt\": \"2024-03-09T17:45:18.265+00:00\"\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Gas Bill\",\n        \"description\": \"Gas Bill\",\n        \"amount\": 4000,\n        \"category\": \"Gas\",\n        \"date\": \"2019-05-24\",\n        \"createdAt\": \"2024-03-09T17:45:38.980+00:00\",\n        \"updatedAt\": \"2024-03-09T17:45:38.980+00:00\"\n    },\n    {\n        \"id\": 6,\n        \"name\": \"Grocery Bill\",\n        \"description\": \"Grocery Bill\",\n        \"amount\": 400,\n        \"category\": \"Grocery\",\n        \"date\": \"2019-05-24\",\n        \"createdAt\": \"2024-03-09T17:46:07.874+00:00\",\n        \"updatedAt\": \"2024-03-09T17:46:07.874+00:00\"\n    }\n]"
				}
			]
		},
		{
			"name": "Pagination",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/expenses?size=5&page=1",
					"host": [
						"{{url}}"
					],
					"path": [
						"expenses"
					],
					"query": [
						{
							"key": "size",
							"value": "5"
						},
						{
							"key": "page",
							"value": "1"
						}
					]
				}
			},
			"response": [
				{
					"name": "Get by page and size Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/v1/expenses?size=5&page=1",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"expenses"
							],
							"query": [
								{
									"key": "size",
									"value": "5"
								},
								{
									"key": "page",
									"value": "1"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 09 Mar 2024 17:56:49 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": 6,\n        \"name\": \"Grocery Bill\",\n        \"description\": \"Grocery Bill\",\n        \"amount\": 400,\n        \"category\": \"Grocery\",\n        \"date\": \"2019-05-24\",\n        \"createdAt\": \"2024-03-09T17:46:07.874+00:00\",\n        \"updatedAt\": \"2024-03-09T17:46:07.874+00:00\"\n    },\n    {\n        \"id\": 7,\n        \"name\": \"Internet Bill\",\n        \"description\": \"Internet Bill\",\n        \"amount\": 400,\n        \"category\": \"Internet\",\n        \"date\": \"2020-05-24\",\n        \"createdAt\": \"2024-03-09T17:46:25.778+00:00\",\n        \"updatedAt\": \"2024-03-09T17:46:25.778+00:00\"\n    },\n    {\n        \"id\": 8,\n        \"name\": \"Cellphone Bill\",\n        \"description\": \"Cellphone Bill\",\n        \"amount\": 400,\n        \"category\": \"Internet\",\n        \"date\": \"2021-06-24\",\n        \"createdAt\": \"2024-03-09T17:46:39.883+00:00\",\n        \"updatedAt\": \"2024-03-09T17:46:39.884+00:00\"\n    },\n    {\n        \"id\": 9,\n        \"name\": \"Entertainment Bill\",\n        \"description\": \"Entertainment Bill\",\n        \"amount\": 3000,\n        \"category\": \"Entertainment\",\n        \"date\": \"2021-07-29\",\n        \"createdAt\": \"2024-03-09T17:47:16.466+00:00\",\n        \"updatedAt\": \"2024-03-09T17:49:38.635+00:00\"\n    },\n    {\n        \"id\": 10,\n        \"name\": \"Shopping Bill\",\n        \"description\": \"Shopping Bill\",\n        \"amount\": 400,\n        \"category\": \"Entertainment\",\n        \"date\": \"2021-08-29\",\n        \"createdAt\": \"2024-03-09T17:47:57.332+00:00\",\n        \"updatedAt\": \"2024-03-09T17:47:57.332+00:00\"\n    }\n]"
				}
			]
		},
		{
			"name": "Sorting",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/expenses?sort=name,desc",
					"host": [
						"{{url}}"
					],
					"path": [
						"expenses"
					],
					"query": [
						{
							"key": "sort",
							"value": "name,desc"
						}
					]
				}
			},
			"response": [
				{
					"name": "Sorting Example",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "localhost:8080/api/v1/expenses?sort=name,desc",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"expenses"
							],
							"query": [
								{
									"key": "sort",
									"value": "name,desc"
								}
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": [
						{
							"key": "Content-Type",
							"value": "application/json"
						},
						{
							"key": "Transfer-Encoding",
							"value": "chunked"
						},
						{
							"key": "Date",
							"value": "Sat, 09 Mar 2024 17:59:15 GMT"
						},
						{
							"key": "Keep-Alive",
							"value": "timeout=60"
						},
						{
							"key": "Connection",
							"value": "keep-alive"
						}
					],
					"cookie": [],
					"body": "[\n    {\n        \"id\": 3,\n        \"name\": \"Water Bill\",\n        \"description\": \"Water Bill\",\n        \"amount\": 500,\n        \"category\": \"Utility\",\n        \"date\": \"2013-05-24\",\n        \"createdAt\": \"2024-03-09T17:44:45.140+00:00\",\n        \"updatedAt\": \"2024-03-09T17:44:45.140+00:00\"\n    },\n    {\n        \"id\": 4,\n        \"name\": \"Transportation Bill\",\n        \"description\": \"Transportation Bill\",\n        \"amount\": 4000,\n        \"category\": \"Transportation\",\n        \"date\": \"2017-05-24\",\n        \"createdAt\": \"2024-03-09T17:45:18.265+00:00\",\n        \"updatedAt\": \"2024-03-09T17:45:18.265+00:00\"\n    },\n    {\n        \"id\": 10,\n        \"name\": \"Shopping Bill\",\n        \"description\": \"Shopping Bill\",\n        \"amount\": 400,\n        \"category\": \"Entertainment\",\n        \"date\": \"2021-08-29\",\n        \"createdAt\": \"2024-03-09T17:47:57.332+00:00\",\n        \"updatedAt\": \"2024-03-09T17:47:57.332+00:00\"\n    },\n    {\n        \"id\": 7,\n        \"name\": \"Internet Bill\",\n        \"description\": \"Internet Bill\",\n        \"amount\": 400,\n        \"category\": \"Internet\",\n        \"date\": \"2020-05-24\",\n        \"createdAt\": \"2024-03-09T17:46:25.778+00:00\",\n        \"updatedAt\": \"2024-03-09T17:46:25.778+00:00\"\n    },\n    {\n        \"id\": 1,\n        \"name\": \"Housing Bill\",\n        \"description\": \"Housing Bill\",\n        \"amount\": 15000,\n        \"category\": \"Housing\",\n        \"date\": \"2013-05-24\",\n        \"createdAt\": \"2024-03-09T17:43:46.523+00:00\",\n        \"updatedAt\": \"2024-03-09T17:43:46.523+00:00\"\n    },\n    {\n        \"id\": 6,\n        \"name\": \"Grocery Bill\",\n        \"description\": \"Grocery Bill\",\n        \"amount\": 400,\n        \"category\": \"Grocery\",\n        \"date\": \"2019-05-24\",\n        \"createdAt\": \"2024-03-09T17:46:07.874+00:00\",\n        \"updatedAt\": \"2024-03-09T17:46:07.874+00:00\"\n    },\n    {\n        \"id\": 5,\n        \"name\": \"Gas Bill\",\n        \"description\": \"Gas Bill\",\n        \"amount\": 4000,\n        \"category\": \"Gas\",\n        \"date\": \"2019-05-24\",\n        \"createdAt\": \"2024-03-09T17:45:38.980+00:00\",\n        \"updatedAt\": \"2024-03-09T17:45:38.980+00:00\"\n    },\n    {\n        \"id\": 9,\n        \"name\": \"Entertainment Bill\",\n        \"description\": \"Entertainment Bill\",\n        \"amount\": 3000,\n        \"category\": \"Entertainment\",\n        \"date\": \"2021-07-29\",\n        \"createdAt\": \"2024-03-09T17:47:16.466+00:00\",\n        \"updatedAt\": \"2024-03-09T17:49:38.635+00:00\"\n    },\n    {\n        \"id\": 2,\n        \"name\": \"Electricity Bill\",\n        \"description\": \"Electricity Bill\",\n        \"amount\": 1000,\n        \"category\": \"Utility\",\n        \"date\": \"2013-05-24\",\n        \"createdAt\": \"2024-03-09T17:44:21.856+00:00\",\n        \"updatedAt\": \"2024-03-09T17:44:21.856+00:00\"\n    },\n    {\n        \"id\": 8,\n        \"name\": \"Cellphone Bill\",\n        \"description\": \"Cellphone Bill\",\n        \"amount\": 400,\n        \"category\": \"Internet\",\n        \"date\": \"2021-06-24\",\n        \"createdAt\": \"2024-03-09T17:46:39.883+00:00\",\n        \"updatedAt\": \"2024-03-09T17:46:39.884+00:00\"\n    }\n]"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}